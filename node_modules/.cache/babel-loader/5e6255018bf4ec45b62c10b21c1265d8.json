{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"score\"\n}, [/*#__PURE__*/_createTextVNode(\" Player \"), /*#__PURE__*/_createElementVNode(\"span\", null, \"0\"), /*#__PURE__*/_createTextVNode(\" x \"), /*#__PURE__*/_createElementVNode(\"span\", null, \"0\"), /*#__PURE__*/_createTextVNode(\" Computer \")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"answer\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"value\"];\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  name: \"result\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"✅ Congratulations, the answer \\\"False\\\" is correct.\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.responses.length != 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"h1\", null, _toDisplayString($data.question), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.responses, (resp, id) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: id,\n      value: resp\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.resultCheck = $event),\n      value: resp\n    }, null, 8\n    /* PROPS */\n    , _hoisted_5), [[_vModelRadio, $data.resultCheck]]), _createElementVNode(\"label\", null, _toDisplayString(resp), 1\n    /* TEXT */\n    )], 8\n    /* PROPS */\n    , _hoisted_4);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_6, _createElementVNode(\"section\", _hoisted_7, [_hoisted_8, _createElementVNode(\"button\", {\n    class: \"send\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.checkResult && $options.checkResult(...args))\n  }, \"Send\")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;gCAEIA,oBAEU,SAFV,EAEU;EAFDC,KAAK,EAAC;AAEL,CAFV,EAAsB,+BAAC,WAAD,eACbD,oBAAc,MAAd,EAAc,IAAd,EAAM,GAAN,CADa,gCACC,MADD,eACIA,oBAAc,MAAd,EAAc,IAAd,EAAM,GAAN,CADJ,gCACkB,aADlB,CAAtB;;AAAA;;;EAIKC,KAAK,EAAC;;;;;gCAWXD,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;EACSE,IAAI,EAAC;;;gCACZF,oBAA0D,IAA1D,EAA0D,IAA1D,EAAI,qDAAJ,EAAqD;AAAA;AAArD;;;SAlBOG,gBAAUC,MAAV,IAAgB,mBAA3BC,oBAqBM,KArBN,EAqBMC,UArBN,EAqBM,CApBJC,UAoBI,EAjBJP,oBAAuB,IAAvB,EAAuB,IAAvB,EAAuBQ,iBAAhBL,cAAgB,CAAvB,EAAe;EAAA;EAAf,CAiBI,EAhBJH,oBAUM,KAVN,cAUM,oBATJK,oBAQMI,SARN,EAQM,IARN,EAQMC,YARoBP,eAQpB,EAR6B,CAAtBQ,IAAsB,EAAhBC,EAAgB,KAAd;yBAArBP,oBAQM,KARN,EAQM;MARgCQ,GAAG,EAAED,EAQrC;MAR0CE,KAAK,EAAEH;IAQjD,CARN,mBACEX,oBAKE,OALF,EAKE;MAJAe,IAAI,EAAC,OAIL;MAHAb,IAAI,EAAC,SAGL;iEAFSC,oBAAWa,OAEpB;MADCF,KAAK,EAAEH;IACR,CALF;;IAAA,+BAGWR,sBAGXH,oBAAyB,OAAzB,EAAyB,IAAzB,EAAyBQ,iBAAfG,IAAe,CAAzB,EAAc;IAAA;IAAd,EAPF;;IAAA;GAQM,CARN;;EAAA,CASI,EAVN,CAgBI,EALJM,UAKI,EAJJjB,oBAGU,SAHV,cAGU,CAFRkB,UAEQ,EADRlB,oBAAqE,QAArE,EAAqE;IAA7DC,KAAK,EAAC,MAAuD;IAAhDc,IAAI,EAAC,QAA2C;IAAjCI,OAAK,yCAAEC,qDAAF;EAA4B,CAArE,EAAwD,MAAxD,CACQ,CAHV,CAII,CArBN","names":["_createElementVNode","class","name","$data","length","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_Fragment","_renderList","resp","id","key","value","type","$event","_hoisted_6","_hoisted_8","onClick","$options"],"sourceRoot":"","sources":["/Users/mtofa/Desktop/mTomady/Course_Material/quiz-game/src/App.vue"],"sourcesContent":["<template>\n  <div v-if=\"responses.length != 0\">\n    <section class=\"score\">\n      Player <span>0</span> x <span>0</span> Computer\n    </section>\n    <h1>{{ question }}</h1>\n    <div class=\"answer\">\n      <div v-for=\"(resp, id) in responses\" :key=\"id\" :value=\"resp\">\n        <input\n          type=\"radio\"\n          name=\"options\"\n          v-model=\"resultCheck\"\n          :value=\"resp\"\n        />\n        <label>{{ resp }}</label>\n      </div>\n    </div>\n    <br />\n    <section name=\"result\">\n      <h4>✅ Congratulations, the answer \"False\" is correct.</h4>\n      <button class=\"send\" type=\"button\" @click=\"checkResult\">Send</button>\n    </section>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"App\",\n  components: {},\n\n  data() {\n    return {\n      question: null,\n      responses: [],\n      resultCheck: null,\n      correctAnswer: null,\n    };\n  },\n\n  created() {\n    this.getList();\n  },\n\n  methods: {\n    getList() {\n      this.axios\n        .get(\"https://opentdb.com/api.php?amount=1&category=18\")\n        .then((response) => {\n          const resp = response.data.results[0];\n          this.question = resp.question;\n          const array = resp.incorrect_answers;\n          array.push(resp.correct_answer);\n          this.responses = this.randomArrayShuffle(array);\n          this.correctAnswer = resp.correct_answer;\n        });\n    },\n\n    randomArrayShuffle(array) {\n      var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n      return array;\n    },\n\n    checkResult() {\n      if (this.resultCheck === this.correctAnswer) console.log(\"good\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 60px auto;\n  max-width: 960px;\n\n  .answer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: left;\n    margin-left: 24em;\n  }\n\n  button.send {\n    margin-top: 12px;\n    height: 40px;\n    min-width: 120px;\n    padding: 0 16px;\n    color: #fff;\n    background-color: #1867c0;\n    border: 1px solid #1867c0;\n    cursor: pointer;\n  }\n\n  input[type=\"radio\"] {\n    margin: 12px 4px;\n  }\n\n  section.score span {\n    padding: 8px;\n    font-weight: bold;\n    border: 1px solid black;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}