{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"answer\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"value\", \"disabled\"];\nconst _hoisted_6 = [\"innerHTML\"];\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  name: \"result\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = [\"innerHTML\"];\nconst _hoisted_12 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.responses.length != 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", {\n    innerHTML: $data.question\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.responses, (resp, id) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: id,\n      value: resp\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.resultChecked = $event),\n      value: resp,\n      disabled: $data.result\n    }, null, 8\n    /* PROPS */\n    , _hoisted_5), [[_vModelRadio, $data.resultChecked]]), _createElementVNode(\"label\", {\n      innerHTML: resp\n    }, null, 8\n    /* PROPS */\n    , _hoisted_6)], 8\n    /* PROPS */\n    , _hoisted_4);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_7, _createElementVNode(\"section\", _hoisted_8, [$data.canShowResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [!$data.result ? (_openBlock(), _createElementBlock(\"h4\", _hoisted_10, \" You have to choose first \")) : $data.resultOk ? (_openBlock(), _createElementBlock(\"h4\", {\n    key: 1,\n    innerHTML: '✅ Congratulations, the answer ' + $data.result + ' is correct.'\n  }, null, 8\n  /* PROPS */\n  , _hoisted_11)) : (_openBlock(), _createElementBlock(\"h4\", {\n    key: 2,\n    innerHTML: 'OOH, the answer ' + $data.result + ' is incorrect. The right answer is ' + $data.correctAnswer\n  }, null, 8\n  /* PROPS */\n  , _hoisted_12))])) : _createCommentVNode(\"v-if\", true), !$data.result ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"send\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.checkResult && $options.checkResult(...args))\n  }, \"Send\")) : _createCommentVNode(\"v-if\", true), $data.result ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"send\",\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getNextQuestion && $options.getNextQuestion(...args))\n  }, \"Next question\")) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;EAGSA,KAAK,EAAC;;;;;;gCAYXC,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;EACSC,IAAI,EAAC;;;;;;;;;;;SAfLC,gBAAUC,MAAV,IAAgB,mBAA3BC,oBA0BM,KA1BN,EA0BMC,UA1BN,EA0BM,CAzBJL,oBAA2B,IAA3B,EAA2B;IAAvBM,SAAiB,EAATJ;EAAe,CAA3B,EAAoB,IAApB,EAAoB;EAAA;EAApB,EAAoBK,UAApB,CAyBI,EAxBJP,oBAWM,KAXN,cAWM,oBAVJI,oBASMI,SATN,EASM,IATN,EASMC,YAToBP,eASpB,EAT6B,CAAtBQ,IAAsB,EAAhBC,EAAgB,KAAd;yBAArBP,oBASM,KATN,EASM;MATgCQ,GAAG,EAAED,EASrC;MAT0CE,KAAK,EAAEH;IASjD,CATN,mBACEV,oBAME,OANF,EAME;MALAc,IAAI,EAAC,OAKL;MAJAb,IAAI,EAAC,SAIL;iEAHSC,sBAAaa,OAGtB;MAFCF,KAAK,EAAEH,IAER;MADCM,QAAQ,EAAEd;IACX,CANF;;IAAA,+BAGWA,wBAIXF,oBAA6B,OAA7B,EAA6B;MAAtBM,SAAa,EAALI;IAAc,CAA7B,EAAmB,IAAnB,EAAmB;IAAA;IAAnB,EAAmBO,UAAnB,EARF;;IAAA;GASM,CATN;;EAAA,CAUI,EAXN,CAwBI,EAZJC,UAYI,EAXJlB,oBAUU,SAVV,cAUU,CATGE,qCAAXE,oBAMM,KANN,EAMMe,UANN,EAMM,EALOjB,8BAAXE,oBAEK,IAFL,EAEKgB,WAFL,EAAmB,4BAAnB,KAGelB,gCAAfE,oBAAkG,IAAlG,EAAkG;UAAA;IAAzEE,SAAkE,qCAAxBJ,YAAwB,GAAlB;EAAyB,CAAlG;;EAAA,iCACAE,oBAA0G,IAA1G,EAA0G;UAAA;IAA/FE,SAAyF,uBAA7DJ,YAA6D,GAAvD,qCAAuD,GAAdA;EAAoB,CAA1G;;EAAA,eACI,CANN,sCASQ,GAFuDA,8BAA/DE,oBAAoF,QAApF,EAAoF;UAAA;IAA5EL,KAAK,EAAC,MAAsE;IAA/De,IAAI,EAAC,QAA0D;IAAhDO,OAAK,yCAAEC,qDAAF;EAA2C,CAApF,EAAuE,MAAvE,sCAEQ,EAD0DpB,8BAAlEE,oBAAgG,QAAhG,EAAgG;UAAA;IAAxFL,KAAK,EAAC,MAAkF;IAA3Ee,IAAI,EAAC,QAAsE;IAA5DO,OAAK,yCAAEC,6DAAF;EAAuD,CAAhG,EAA0E,eAA1E,sCACQ,CAVV,CAWI,CA1BN","names":["class","_createElementVNode","name","$data","length","_createElementBlock","_hoisted_1","innerHTML","_hoisted_2","_Fragment","_renderList","resp","id","key","value","type","$event","disabled","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","onClick","$options"],"sourceRoot":"","sources":["/Users/mtofa/Desktop/mTomady/Course_Material/quiz-game/src/App.vue"],"sourcesContent":["<template>\n  <div v-if=\"responses.length != 0\">\n    <h1 v-html=\"question\"></h1>\n    <div class=\"answer\">\n      <div v-for=\"(resp, id) in responses\" :key=\"id\" :value=\"resp\">\n        <input\n          type=\"radio\"\n          name=\"options\"\n          v-model=\"resultChecked\"\n          :value=\"resp\"\n          :disabled=\"result\"\n        />\n        <label v-html=\"resp\"></label>\n      </div>\n    </div>\n    <br />\n    <section name=\"result\">\n      <div v-if=\"canShowResult\">\n        <h4 v-if=\"!result\">\n          You have to choose first\n        </h4>\n        <h4 v-else-if=\"resultOk\" v-html=\"'✅ Congratulations, the answer '+ result + ' is correct.'\"> </h4>\n        <h4 v-else v-html=\"'OOH, the answer '+ result +' is incorrect. The right answer is '+ correctAnswer\"></h4>\n      </div>\n      <button class=\"send\" type=\"button\" @click=\"checkResult\" v-if=\"!result\">Send</button>\n      <button class=\"send\" type=\"button\" @click=\"getNextQuestion\" v-if=\"result\">Next question</button>\n    </section>\n  </div>\n</template>\n<script>\nimport ScoreBoard from './components/scoreBoard.vue';\nexport default {\n  name: \"App\",\n  components: {ScoreBoard},\n\n  data() {\n    return {\n      canShowResult: null,\n      correctAnswer: null,\n      question: null,\n      responses: [],\n      resultChecked: null,\n      resultOk: null,\n      result: null,\n      computerScore: 0,\n      playerScore: 0\n    };\n  },\n\n  created() {\n    this.getData();\n  },\n\n  methods: {\n    checkResult() {\n      this.canShowResult = true;\n      if (!this.resultChecked) return;\n      this.result = this.resultChecked;\n      this.resultOk = this.resultChecked === this.correctAnswer;\n      if (this.resultOk) this.playerScore +=1\n      else this.computerScore +=1\n    },\n\n    async getData() {\n      await this.axios\n        .get(\"https://opentdb.com/api.php?amount=1&category=18\")\n        .then((response) => {\n          const resp = response.data.results[0];\n          this.question = resp.question;\n          const array = resp.incorrect_answers;\n          const x = Math.round(Math.random() * array.length);\n          array.splice(x, 0, resp.correct_answer);\n          this.responses = array;\n          this.correctAnswer = resp.correct_answer;\n        });\n    },\n\n    async getNextQuestion() {\n      await this.getData();\n      this.canShowResult = null;\n      this.result = null;\n      this.resultChecked = null;\n      this.resultOk = null;\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 60px auto;\n  max-width: 960px;\n\n  .answer {\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    text-align: left;\n    margin-left: 10em;\n  }\n\n  button.send {\n    margin-top: 12px;\n    height: 40px;\n    min-width: 120px;\n    padding: 0 16px;\n    color: #fff;\n    background-color: #1867c0;\n    border: 1px solid #1867c0;\n    cursor: pointer;\n  }\n\n  input[type=\"radio\"] {\n    margin: 12px 4px;\n  }\n\n  section.score span {\n    padding: 8px;\n    font-weight: bold;\n    border: 1px solid black;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}